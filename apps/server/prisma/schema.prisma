generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  mail      String    @unique
  firstName String?
  lastName  String
  password  String
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

model Project {
  id                   String        @id @default(uuid())
  title          String
  description          String?
  userId               String
  chatId               String        @unique
  
  // Video project settings
  aspectRatio          String        @default("16:9")
  resolution           Json          @default("{\"width\":1920,\"height\":1080}")
  fps                  Int           @default(30)
  duration             Float         @default(0)
  currentTime          Float         @default(0)
  
  // Editor state
  activeSection        String        @default("media") // media, timeline, effects, etc.
  activeElement        String?       // current selected element type
  activeElementIndex   Int           @default(0)
  timelineZoom         Float         @default(100)
  zoomLevel            Float         @default(1)
  
  // Playback state
  isPlaying            Boolean       @default(false)
  isMuted              Boolean       @default(false)
  
  // Feature flags
  enableMarkerTracking Boolean       @default(true)
  
  // Export settings
  exportSettings       Json          @default("{\"format\":\"mp4\",\"fps\":30,\"includeSubtitles\":false,\"quality\":\"high\",\"resolution\":\"1080p\",\"speed\":\"fastest\"}")
  
  // Media and timeline data as JSON arrays
  mediaFiles           Json          @default("[]") // Array of media file objects
  textElements         Json          @default("[]") // Array of text elements
  timelineItems        Json          @default("[]") // Array of timeline items
  
  // History for undo/redo
  history              Json          @default("[]")
  future               Json          @default("[]")
  
  // Timestamps
  createdAt            DateTime      @default(now())
  lastModified         DateTime      @default(now())
  
  // Relations
  user                 User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages             Message[]
}



model Message {
  id        Int      @id @default(autoincrement())
  sender    Sender
  content   String
  projectId String
  createdAt DateTime @default(now())
  
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

enum Sender {
  user
  ai
}